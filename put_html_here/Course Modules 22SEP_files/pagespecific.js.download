(function () {
    var pageLink, href;
    //Replace the content specific breadcrums with Module when the current page was accessed from the Module page
    if (CanvasDetails.location.search.hasOwnProperty("module_item_id")) {
        if ($("#breadcrumbs").find("a:contains('Pages')").length > 0) {
            pageLink = $("#breadcrumbs").find("a:contains('Pages')");
            href = pageLink.attr("href");
            href = href.replace(/pages/i, "modules");
            pageLink.text("Modules").attr("href", href);
        } else if ($("#breadcrumbs").find("a:contains('Assignments')").length > 0) {
            pageLink = $("#breadcrumbs").find("a:contains('Assignments')");
            href = pageLink.attr("href");
            href = href.replace(/assignments/i, "modules");
            pageLink.text("Modules").attr("href", href);
        } else if ($("#breadcrumbs").find("a:contains('Discussions')").length > 0) {
            pageLink = $("#breadcrumbs").find("a:contains('Discussions')");
            href = pageLink.attr("href");
            href = href.replace(/discussion_topics/i, "modules");
            pageLink.text("Modules").attr("href", href);
        }
    }

    if (CanvasDetails.location.hasOwnProperty("groups")) {

    $("body").addClass("group-nav");
    }
    
    

    if (CanvasDetails.location.accounts == 1 && CanvasDetails.location.hasOwnProperty("admin_tools")) {
        var acclist = $("<div class='restoreContentPane' style='margin-top: 20px; background-color: #fff; padding: 15px;'><button id='getAdminList' class='btn btn-info pull-right'>Get List</button><button id='exportTable' disabled='true' class='btn btn-info pull-right'>Export</button><h2>Account Admins</h2><table class='ic-Table' id='admin-list-table'></table></div>");

        $(acclist).insertAfter("#admin-tools-app")

        $("#getAdminList").click(function () {
            $('<i id="admin-loading-icon" class="fa fa-spinner fa-spin fa-3x fa-fw"></i><span class="sr-only">Loading...</span>').insertBefore($(this));
            $(acclist).find("table").empty();
            $("#exportTable").attr("disabled", false);
            getUsers(1, [], 1, function (adm) {
                var tb = $("<tbody><tr><th colspan='3' data-style='Bold'>Root</th></tr></tbody>")
                $(acclist).find("table").append(tb);
                $.each(adm, function (x, admin) {
                    var r = $("<tr><td>" + admin.user.name + "</td><td>" + admin.user.sis_user_id + "</td><td>" + admin.role + "</td></tr>")
                    tb.append(r);
                });
                var count = 0;
                getAccounts([], 1, function (data) {

                    console.log(data)
                    $.each(data, function (i, account) {
                        count++
                        var tb = $("<tbody><tr><th colspan='3'  data-style='Bold'>" + account.name + "</th></tr></tbody>")
                        $(acclist).find("table").append(tb);

                        getUsers(account.id, [], 1, function (adm) {
                            count--
                            $.each(adm, function (x, admin) {
                                var r = $("<tr><td>" + admin.user.name + "</td><td>" + admin.user.sis_user_id + "</td><td>" + admin.role + "</td></tr>")
                                tb.append(r);
                            });
                            if (count === 0) {
                                $("#admin-loading-icon").remove();
                            }
                        })
                    });
                });
            });
        })

        function getAccounts(accounts, page, callback) {
            $.get("/api/v1/accounts/1/sub_accounts?recursive=true&per_page=50&page=" + page).success(function (data) {
                accounts = accounts.concat(data);
                if (data.length === 50) {
                    getAccounts(accounts, page + 1, callback)
                } else {
                    callback(accounts);
                }
            })
        }

        function getUsers(account, users, page, callback) {
            $.get("/api/v1/accounts/" + account + "/admins?per_page=50&page=" + page).success(function (data) {
                users = users.concat(data);
                if (data.length === 50) {
                    getUsers(account, users, page + 1, callback)
                } else {
                    callback(users);
                }
            })
        }

        $("#exportTable").click(function () {
            tablesToExcel($("#admin-list-table"), "Account Admins", 'Excel')
        });
    }

    onElementRendered("div[data-master-course]", function (element) {

        var course = element.attr("data-master-course");

        if (CanvasDetails.location.pages === "course-resources") {
            $("*[data-load-content]").append("<div class='dvu_rd_container'></div>");

            /*
             * <style>.fancy-page-nav {\
             background-color: #fff;\
             height: 40px;\
             left: 0;\
             position: absolute;\
             top: 80px;\
             width: 100%;\
             z-index:100;\
             }\
             .fancy-page-nav a {\
             padding-top: 10px;\
             text-decoration: none;\
             }\
             #wrapper .user_content > h1 {\
             margin-bottom: 50px;\
             }\
             </style>
             */

            $.get("https://lms.courselearn.net/lms/OneDatabase/courseresources.php?id=" + course).success(function (data) {
                $.each(data, function (i, v) {
                    var section = $("<div class='section'></div>");
                    section.append("<div class='btt'><h2>" + v.title + "</h2></div>");
                    section.append("<div class='section-content'>" + v.content + "</div>");
                    if (v.action) {
                        actions[v.action](function (data) {
                            console.log(v.location, data);
                            section.find(v.location).append(data);
                        });
                    }
                    $(".user_content").append(section);
                });
                onVarAvailable(['renderTOC'],function(){
                   renderTOC($("#wiki_page_show .section")); 
                })
                
                //$("<div class='fancy-page-nav'></div>").insertAfter(".page-title");

                /* $(".user_content .section").each(function (i) {
                 var id = "nav-section-" + i;
                 $(this).attr("id", id);
                 var navBut = $("<a href='#" + id + "' class='btn'>" + $(this).find("h2").first().text() + "</a>");
                 $(".fancy-page-nav").append(navBut);
                 })*/


            });
            /*  $("body").on("click", ".fancy-page-nav a", function (e) {
             e.preventDefault();
             $("html, body").scrollTop($($(this).attr("href")).offset().top - 50);
             })*/
            /*  $(window).scroll(function () {
             var left = $(".user_content").offset().left + "px";
             if ($(".page-title").offset().top + $(".page-title").height() - $(window).scrollTop() < 0) {
             $(".fancy-page-nav").css({position: "fixed", top: 0, left: left})
             } else {
             $(".fancy-page-nav").removeAttr("style");
             }
             
             });*/
        }
   /*     if (CanvasDetails.location.pages && CanvasDetails.location.pages.match(/(week|unit|module)-\d*-introduction/ig)) {
            console.log("loading objectives");
            var unit = CanvasDetails.location.pages.match(/\d+/);
            console.log(unit);
            if (unit) {
                unit = unit[0];
                var sec = $("<div class='section'></div>").html("<div class='btt'><h2>Objectives</h2></div>");
                $.get("https://" + location.hostname + "/api/v1/courses/" + CanvasDetails.location.courses + "/outcome_groups?per_page=50", function (data) {

                    $.each(data, function (i, v) {
                        if (v.description && !v.title.match(/outcomes/i)) {
                            data[i].title = data[i].title.split(/-/);
                            data[i].title = data[i].title[data[i].title.length - 1];
                            if (!data[i].title.match(/\D/)) {
                                data[i].title = parseInt(data[i].title);
                            }
                        }
                    });
                    data.sort(function (a, b) {
                        if (a.title > b.title) {
                            return 1;
                        }
                        if (a.title < b.title) {
                            return -1;
                        }
                        // a must be equal to b
                        return 0;
                    });
                    var objlist = $("<div class='section-content'></div>");
                    $.each(data, function (i, v) {
                        if (typeof v.title==='number' || (v.description && !v.title.match(/outcomes/i))) {
                            var units = []
                            var desc = $("<div/>").html(v.description);
                            var link = desc.find(".obj-unit-link").text();
                            if (link && link.length > 0) {
                                units = link.split(/,/g);
                            }
                            if (units.indexOf(unit) >= 0) {
                                var obj = $("<div data-obj-index='0' class='loaded-objective'>").html("<div class='objective'><div class='obj-number'><p>" + v.title + "</p></div><div class='obj-description'>" + v.description + "</div></div>");
                                $.get("https://" + location.hostname + "/api/v1/courses/" + CanvasDetails.location.courses + "/outcome_groups/" + v.id + "/outcomes?per_page=50&outcome_style=full", function (outcomes) {
                                    obj.append("<h3 class='sub-heading'>Enablers</h3>");
                                    var list = $("<ul></ul>");
                                    $.each(outcomes, function (index, enabler) {
                                        var elink = $("<div>").html(enabler.outcome.description).find(".obj-unit-link").text();
                                        if (elink && elink.length > 0) {
                                            var eunits = elink.split(/,/g);
                                            if (eunits.indexOf(unit) >= 0) {
                                                list.append("<li>" + enabler.outcome.description + "</li>");
                                            }
                                        }
                                    })
                                    var enb = $("<div class='section-content-uneditable'></div>").append(list);
                                    obj.append(enb);
                                    obj.find(".obj-unit-link").remove();
                                });
                                objlist.append(obj);
                            }
                        }
                    });
                    var cont = $(".dvu_rd_container,.course-item-container").first();
                    if (objlist.find(".loaded-objective").length > 0) {
                        sec.append(objlist);
                        objlist.find(".obj-unit-link").remove();
                        sec.insertAfter(cont.find(".section").last());
                    }
                });
            }
        }
*/
     /*   if (CanvasDetails.location.assignments === "syllabus") {
            console.log("Loading Syllabus")
            $.get("https://" + location.hostname + "/api/v1/courses/" + CanvasDetails.location.courses + "/discussion_topics?per_page=50").success(function (data) {
                $.each(data, function (i, v) {
                    var assign = v.assignment_id;
                    if (assign) {
                        $(".related-assignment_" + assign).find(".icon-assignment").removeClass("icon-assignment").addClass("icon-discussion");
                    }
                });
            });


            $("#course_syllabus").append("<div class='dvu_rd_container'></div>");



            var actions = {
                getCourseOutcomes: function (callback) {
                    $.get("https://" + location.hostname + "/api/v1/courses/" + CanvasDetails.location.courses + "/outcome_groups?per_page=30", function (data) {
                        console.log(data);
                        var outc = []
                        $.each(data, function (i, v) {
                            if (v.description && !v.title.match(/outcomes/i)) {
                                data[i].title = data[i].title.split(/-/);
                                data[i].title = data[i].title[data[i].title.length - 1];
                                if (!data[i].title.match(/\D/)) {
                                    data[i].title = parseInt(data[i].title);
                                }
                                outc.push(data[i]);
                            }
                        });
                        outc.sort(function (a, b) {
                            console.log(b)
                            if (a.title > b.title) {

                                console.log("*A*")
                                return 1;
                            }
                            if (a.title < b.title) {

                                console.log("*B*")
                                return -1;
                            }
                            // a must be equal to b
                            return 0;
                        });
                        var objlist = $('<div></div>');
                        $.each(outc, function (i, v) {
                            if (typeof v.title==='number' || (v.description && !v.title.match(/outcomes/i))) {
                                // var obj = $("<div class='row-fluid course-outcome'><div class='span1'><strong>" + v.title + "</strong></div><div class='span8'>" + v.description + "</div></div>");
                                var obj = $("<div data-obj-index='0' class='loaded-objective'>").html("<div class='objective'><div class='obj-number'><p>" + v.title + "</p></div><div class='obj-description'>" + v.description + "</div></div>");
                                objlist.append(obj);
                            }
                        });
                        callback(objlist);
                    });
                },
                getAssignmentList: function (callback) {
                    $("h2:contains('Course Summary')").hide();
                    callback($("#syllabusContainer"));
                },
                getInstructorInfo: function (callback) {
                    var instInfo = $('<div></div>');
                    $.get("https://" + location.hostname + "/api/v1/courses/" + CanvasDetails.location.courses + "/users?enrollment_type=teacher&include[]=avatar_url&include[]=bio&include[]=custom_links&include[]=email").success(function (data) {
                        $.each(data, function (i, v) {
                            if (v.bio)
                                v.bio = v.bio.replace(/\n/g, "<br>");
                            else
                                v.bio = "";
                            instInfo.append('<div class="image-block"><div class="image-block-image profile-avatar-wrapper"><img style="max-width:100%" src="' + v.avatar_url + '"/></div><div class="profileContent__Block"><h2>' + v.name + '</h2><div><h3 class="profileHeader">Contact</h3><p><a href="mailto:' + v.email + '" title="Email link">' + v.email + '</a></p></div><div><h3 id="profile_bio_label" class="profileHeader">Biography</h3><p class="hide-if-editing">' + v.bio + '</p></div></div></div>')
                        });
                        callback(instInfo);
                    });
                }


            };

            $.get("https://lms.courselearn.net/lms/OneDatabase/syllabus.php?id=" + course).success(function (data) {
                $.each(data, function (i, v) {
                    var section = $("<div class='section'></div>");
                    section.append("<div class='btt'><h2>" + v.title + "</h2></div>");
                    section.append("<div class='section-content'>" + v.content + "</div>");
                    if (v.action) {
                        actions[v.action](function (data) {
                            console.log(v.location, data);
                            section.find(v.location).append(data);
                        });
                    }
                    $(".dvu_rd_container").append(section)
                });
                onVarAvailable(['renderTOC'],function(){
                   renderTOC($("#course_syllabus .section"));
                })
                
            });
        }*/
    });
    onElementRendered("body", function (body) {

        $(body).on("click", "a", function (e) {
            var href = $(this).attr("href");
            if ($(this).attr('rel') === 'lightbox' || $(this).children(".thumbnail").length > 0 || (href && href.match(/\.(jpe*g|png|bmp)/i)) && $(this).find("img").length > 0) {
                $("body").append("<div class='lightbox-modal'><img src='" + $(this).attr("href") + "'/><span class='lightbox-modal-close'>Click To Close</span></div>");
                setTimeout(function () {
                    $("body").addClass("modal-backdrop");
                }, 100)

                e.preventDefault();
            }


        });
        $(body).on("click", ".lightbox-modal", function (e) {
            var $this = $(this);
            $("body").removeClass("modal-backdrop");
            setTimeout(function () {
                $this.remove();
            }, 300)

            e.preventDefault();
        });

    })
/*
    onElementRendered(".accordion", function (accordion) {

        $(accordion).not(".student-groups").accordion({header: "h3"});

    });*/


    var tablesToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,',
                tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
                + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Name</Author><Created>{created}</Created></DocumentProperties>'
                + '<Styles>'
                + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
                + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
                + '<Style ss:ID="DateTime"><NumberFormat ss:Format="m/d/yy h:mm AM/PM"></NumberFormat></Style>'
                + '<Style ss:ID="Bold"><Font ss:Bold="1"/><Interior ss:Color="#BDD7EE" ss:Pattern="Solid"/></Style>'
                + '</Styles>'
                + '{worksheets}</Workbook>'
                , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
                , tmplCellXML = '<Cell{span}{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
                , base64 = function (s) {
                    return window.btoa(unescape(encodeURIComponent(s)))
                }
        , format = function (s, c) {
            return s.replace(/{(\w+)}/g, function (m, p) {
                return c[p];
            })
        }
        return function (tables, wbname, appname) {
            var ctx = "";
            var workbookXML = "";
            var worksheetsXML = "";
            var rowsXML = "";

            tables.each(function () {

                var v = $(this).clone();
                var wsname = $(this).attr("data-sheet-name")
                v.find("*").each(function () {
                    if ($(this).css("display") === "none") {
                        $(this).remove();
                    }
                });
                var v = v[0];
                for (var j = 0; j < v.rows.length; j++) {
                    rowsXML += '<Row>'
                    for (var k = 0; k < v.rows[j].cells.length; k++) {
                        var dataType = v.rows[j].cells[k].getAttribute("data-type");
                        var dataStyle = v.rows[j].cells[k].getAttribute("data-style");
                        var dataValue = v.rows[j].cells[k].getAttribute("data-value");
                        var dataSpan = v.rows[j].cells[k].getAttribute("colspan");
                        if (dataSpan)
                            dataSpan = parseInt(dataSpan);
                        dataValue = (dataValue) ? dataValue : v.rows[j].cells[k].innerHTML;
                        var dataFormula = v.rows[j].cells[k].getAttribute("data-formula");
                        dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                        ctx = {attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date' || dataStyle == 'DateTime' || dataStyle == 'Bold') ? ' ss:StyleID="' + dataStyle + '"' : ''
                            , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                            , data: (dataFormula) ? '' : dataValue
                            , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : '',
                            span: dataSpan ? ' ss:MergeAcross="' + (dataSpan - 1) + '"' : ''
                        };
                        rowsXML += format(tmplCellXML, ctx);
                    }
                    rowsXML += '</Row>'
                }
                ctx = {rows: rowsXML, nameWS: wsname || 'Sheet'};
                worksheetsXML += format(tmplWorksheetXML, ctx);
                rowsXML = "";
            });

            ctx = {created: (new Date()).getTime(), worksheets: worksheetsXML};
            workbookXML = format(tmplWorkbookXML, ctx);

            console.log(workbookXML);

            var link = document.createElement("A");
            link.href = uri + base64(workbookXML);
            link.download = wbname || 'Workbook.xls';
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    })();
onElementRendered("#batch_check",function(element){
        $(element).find("input").attr("disabled",true);
    })
})();




